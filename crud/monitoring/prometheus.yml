# Prometheus configuration for Cookie CRUD API monitoring
# Scrapes metrics from application and infrastructure components

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'cookie-crud-local'
    environment: 'development'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'
rule_files:
  - "alert_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape
scrape_configs:
  # Cookie CRUD API application metrics
  - job_name: 'cookie-crud-api'
    static_configs:
      - targets: ['cookie-crud:8080']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: cookie-crud:8080

  # Application health check endpoint
  - job_name: 'cookie-crud-health'
    static_configs:
      - targets: ['cookie-crud:8080']
    metrics_path: '/health'
    scrape_interval: 15s
    scrape_timeout: 5s
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'up'
        target_label: service
        replacement: 'cookie-crud-api'

  # Nginx reverse proxy metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:8080']
    metrics_path: '/nginx_status'
    scrape_interval: 30s
    scrape_timeout: 10s

  # Node exporter for system metrics (if available)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    scrape_timeout: 10s

  # cAdvisor for container metrics (if available)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    scrape_timeout: 10s
    metric_relabel_configs:
      - source_labels: [container_label_com_docker_compose_service]
        target_label: service
      - source_labels: [container_label_com_docker_compose_project]
        target_label: project

  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    scrape_timeout: 10s

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

# Remote write configuration (for external monitoring systems)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint.example.com/api/v1/write"
#     basic_auth:
#       username: "your-username"
#       password: "your-password"

# Storage configuration is handled via command line arguments in docker-compose.yml:
# --storage.tsdb.retention.time=15d
# --storage.tsdb.retention.size=50GB
# --storage.tsdb.wal-compression